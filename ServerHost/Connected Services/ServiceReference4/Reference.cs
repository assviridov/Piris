//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServerHost.ServiceReference4 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference4.IPositionService")]
    public interface IPositionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/AddPosition", ReplyAction="http://tempuri.org/IPositionService/AddPositionResponse")]
        bool AddPosition(DomainService.PositionObject position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/AddPosition", ReplyAction="http://tempuri.org/IPositionService/AddPositionResponse")]
        System.Threading.Tasks.Task<bool> AddPositionAsync(DomainService.PositionObject position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/DeletePosition", ReplyAction="http://tempuri.org/IPositionService/DeletePositionResponse")]
        bool DeletePosition(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/DeletePosition", ReplyAction="http://tempuri.org/IPositionService/DeletePositionResponse")]
        System.Threading.Tasks.Task<bool> DeletePositionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetPositionById", ReplyAction="http://tempuri.org/IPositionService/GetPositionByIdResponse")]
        DomainService.PositionObject GetPositionById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetPositionById", ReplyAction="http://tempuri.org/IPositionService/GetPositionByIdResponse")]
        System.Threading.Tasks.Task<DomainService.PositionObject> GetPositionByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetPositions", ReplyAction="http://tempuri.org/IPositionService/GetPositionsResponse")]
        DomainService.PositionObject[] GetPositions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/GetPositions", ReplyAction="http://tempuri.org/IPositionService/GetPositionsResponse")]
        System.Threading.Tasks.Task<DomainService.PositionObject[]> GetPositionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/UpdatePosition", ReplyAction="http://tempuri.org/IPositionService/UpdatePositionResponse")]
        bool UpdatePosition(DomainService.PositionObject position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPositionService/UpdatePosition", ReplyAction="http://tempuri.org/IPositionService/UpdatePositionResponse")]
        System.Threading.Tasks.Task<bool> UpdatePositionAsync(DomainService.PositionObject position);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPositionServiceChannel : ServerHost.ServiceReference4.IPositionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PositionServiceClient : System.ServiceModel.ClientBase<ServerHost.ServiceReference4.IPositionService>, ServerHost.ServiceReference4.IPositionService {
        
        public PositionServiceClient() {
        }
        
        public PositionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PositionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PositionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PositionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddPosition(DomainService.PositionObject position) {
            return base.Channel.AddPosition(position);
        }
        
        public System.Threading.Tasks.Task<bool> AddPositionAsync(DomainService.PositionObject position) {
            return base.Channel.AddPositionAsync(position);
        }
        
        public bool DeletePosition(int id) {
            return base.Channel.DeletePosition(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePositionAsync(int id) {
            return base.Channel.DeletePositionAsync(id);
        }
        
        public DomainService.PositionObject GetPositionById(int id) {
            return base.Channel.GetPositionById(id);
        }
        
        public System.Threading.Tasks.Task<DomainService.PositionObject> GetPositionByIdAsync(int id) {
            return base.Channel.GetPositionByIdAsync(id);
        }
        
        public DomainService.PositionObject[] GetPositions() {
            return base.Channel.GetPositions();
        }
        
        public System.Threading.Tasks.Task<DomainService.PositionObject[]> GetPositionsAsync() {
            return base.Channel.GetPositionsAsync();
        }
        
        public bool UpdatePosition(DomainService.PositionObject position) {
            return base.Channel.UpdatePosition(position);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePositionAsync(DomainService.PositionObject position) {
            return base.Channel.UpdatePositionAsync(position);
        }
    }
}
